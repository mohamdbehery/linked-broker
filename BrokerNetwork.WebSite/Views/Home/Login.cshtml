@model BrokerNetwork.WebSite.Models.LoginModel

@{
    ViewBag.Title = "تسجيل الدخول";
}

<div class="container">
    <div class="row content-center">
        <div class="col-sm-12">
            <p>
                <img class="content-image-icon" src="~/img/login.png" />
            </p>
            <h3>تسجيل الدخول</h3>
            <p>أنت على وشك الدخول لLinkedBrokers .. فقط أدخل بريدك الالكترونى وكلمة المرور.</p>
            <!-- start form -->
            @using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @class = "form-horizontal", @role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group ">
                            <label class="inline-label">
                                البريد الالكترونى
                            </label>
                            <div class="form-group">
                                @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
                                <i class="form-group__bar"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="input-group ">
                            <label class="inline-label">
                                كلمة المرور
                            </label>
                            <div class="form-group">
                                @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @placeholder = "", @class = "form-control" } })
                                <i class="form-group__bar"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <br />
                        <div class="btn-group">
                            <input class="btn custom-btn" type="submit" value="تسجيل الدخول" />
                            <div class="login-btns1">

                                <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
                                </fb:login-button>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="btn-group">
                            <a href="/Forget" class="btn custom-btn2 login-btns2">نسيت كلمة المرور</a>
                            <div class="text-center login-btns3">
                                <a href="/Register" class="">انشاء حساب جديد..</a>
                            </div>
                        </div>
                    </div>
                </div>
                string msg = ViewBag.Msg;
                if (!string.IsNullOrEmpty(msg))
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="alert alert-danger">
                                @msg
                            </div>
                            <br />
                            <div class="text-center">
                                اذا كان لديك حساب بالفعل <a href="forget" class="btn custom-btn2"> اضغط هنا </a> لاستعادة كلمة المرور
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        @using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @class = "form-horizontal", @role = "form", @id = "frmExternalLogin" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Provider)
            @Html.HiddenFor(x => x.ProviderID)
            @Html.HiddenFor(x => x.Email)
        }
        <script>
            // This is called with the results from from FB.getLoginStatus().
            function statusChangeCallback(response) {
                console.log('statusChangeCallback');
                console.log(response);
                // The response object is returned with a status field that lets the
                // app know the current login status of the person.
                // Full docs on the response object can be found in the documentation
                // for FB.getLoginStatus().
                if (response.status === 'connected') {
                    // Logged into your app and Facebook.
                    testAPI(response);
                } else {
                    // The person is not logged into your app or we are unable to tell.
                    document.getElementById('status').innerHTML = 'Please log ' +
                        'into this app.';
                }
            }

            // This function is called when someone finishes with the Login
            // Button.  See the onlogin handler attached to it in the sample
            // code below.
            function checkLoginState() {
                FB.getLoginStatus(function (response) {
                    statusChangeCallback(response);
                });
            }

            window.fbAsyncInit = function () {
                FB.init({
                    appId: '381754109100836',
                    cookie: true,  // enable cookies to allow the server to access
                    // the session
                    xfbml: true,  // parse social plugins on this page
                    version: 'v3.3' // The Graph API version to use for the call
                });

                // Now that we've initialized the JavaScript SDK, we call
                // FB.getLoginStatus().  This function gets the state of the
                // person visiting this page and can return one of three states to
                // the callback you provide.  They can be:
                //
                // 1. Logged into your app ('connected')
                // 2. Logged into Facebook, but not your app ('not_authorized')
                // 3. Not logged into Facebook and can't tell if they are logged into
                //    your app or not.
                //
                // These three cases are handled in the callback function.

                //FB.getLoginStatus(function(response) {
                //  statusChangeCallback(response);
                //});

            };

            // Load the SDK asynchronously
            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "https://connect.facebook.net/en_US/sdk.js";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));

            // Here we run a very simple test of the Graph API after login is
            // successful.  See statusChangeCallback() for when this call is made.
            function testAPI(res) {
                console.log('Welcome!  Fetching your information.... ');

                FB.api('/me', function (response) {
                    console.log(response);
                    console.log('Successful login for: ' + response.name);
                    $('#Provider').val("FaceBook");
                    $('#ProviderID').val(response.id);
                    $('#frmExternalLogin #Email').val(response.name);
                    //$('#FullName').val(response.name);
                    $('#frmExternalLogin').submit();
                    //document.getElementById('status').innerHTML =
                    //  'Thanks for logging in, ' + response.name + '!';
                });
            }

        /**/</script>

        <!--
      Below we include the Login Button social plugin. This button uses
      the JavaScript SDK to present a graphical Login button that triggers
      the FB.login() function when clicked.
    -->


    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}